<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>html&amp;&amp;css</title>
      <link href="/2024/03/21/html-css/"/>
      <url>/2024/03/21/html-css/</url>
      
        <content type="html"><![CDATA[<h2 id="html"><a href="#html" class="headerlink" title="html"></a>html</h2><h4 id="1-音视频标签"><a href="#1-音视频标签" class="headerlink" title="1.音视频标签"></a>1.音视频标签</h4><p>​音频：</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​src：音频的路径<br>​controls：显示播放的控件<br>​autoplay：自动播放(部分浏览器不支持)<br>​loop：循环播放<br>​音频目前支持格式：mp3,wav,ogg</p><p>​视频:</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> &gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span></span><br></pre></td></tr></table></figure><p>​src：视频的路径<br>​controls：显示播放的控件<br>​autoplay：自动播放(谷歌中徐配合muted实现静音播放)<br>​loop：循环播放<br>​视频目前支持格式：mp4,webm,ogg</p><h4 id="2-列表"><a href="#2-列表" class="headerlink" title="2.列表"></a>2.列表</h4><p>​无序列表：ul&gt;li<br>​有序列表：ol&gt;li<br>​自定义列表：dl&gt;dt dd</p><h4 id="3-表格"><a href="#3-表格" class="headerlink" title="3.表格"></a>3.表格</h4><p>​标题：caption（表示表格整体大标题，魔人显示在表格整体顶部居中），书写在table标签内部</p><h4 id="4-表单"><a href="#4-表单" class="headerlink" title="4.表单"></a>4.表单</h4><p>​input:<br>​text: placeholder:占位符，提示用户输入内容的文本<br>​radio:name:分组，相同name属性值的为一组<br>​  checked:默认选中<br>​file:multiple:多文件选择</p><h4 id="5-页面元素"><a href="#5-页面元素" class="headerlink" title="5.页面元素"></a>5.页面元素</h4><pre><code>&lt;!DOCTYPE html&gt;文档类型声明，告诉浏览器该网页的 HTML版本&lt;html lang=&quot;en&quot;&gt;识别网页中的语言，可以用zh-CN简体中文&lt;meta charset=&quot;UTF-8&quot;&gt;识别字符编码,常见的比如:GB2312,GBK&lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;ie兼容给&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;app端显示设置/**description,keywords,title用于seo：搜索引擎优化**/&lt;meta name=&quot;description&quot; content=&quot;xxx&quot;&gt;&lt;meta name=&quot;keywords&quot; content=&quot;xxx&quot;&gt;&lt;title&gt;xxx&lt;/title&gt;&lt;link rel=&quot;shortcut icon&quot; href=&quot;favicon.ico&quot; type=&quot;image/x-icon&quot;&gt;浏览器标题栏图标</code></pre><h2 id="css"><a href="#css" class="headerlink" title="css"></a>css</h2><h4 id="1-选择器"><a href="#1-选择器" class="headerlink" title="1.选择器:"></a>1.选择器:</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**标签选择器:**/</span></span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**类选择器:**/</span></span><br><span class="line"><span class="selector-class">.one</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**id选择器**/</span></span><br><span class="line"><span class="selector-id">#id</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**通配符选择器**/</span></span><br><span class="line"><span class="comment">/**很少用到，基本上会用于去除默认margin，padding边距**/</span></span><br><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**后代选择器**/</span></span><br><span class="line"><span class="comment">/**在p的后代(儿子、孙子、重孙子...)中找.one**/</span></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-class">.one</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**子代选择器**/</span></span><br><span class="line"><span class="comment">/**在p的儿子中找.one**/</span></span><br><span class="line"><span class="selector-tag">p</span>&gt;<span class="selector-class">.one</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**并集选择器**/</span></span><br><span class="line"><span class="comment">/**在p和.one中找**/</span></span><br><span class="line"><span class="selector-tag">p</span>,<span class="selector-class">.one</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**交集选择器**/</span></span><br><span class="line"><span class="comment">/**同时满足p和.one**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.one</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**伪类选择器**/</span></span><br><span class="line"><span class="comment">/**鼠标悬停的时候设置样式**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**未访问的时候设置样式**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:link</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**访问之后设置样式**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**鼠标按下的时候设置样式**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**用于选中元素获取焦点时状态，常用于表单控件**/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**属性选择器**/</span></span><br><span class="line"><span class="comment">/**通过元素上的HTML属性来选择元素，常用于选择 input 标签**/</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type=<span class="string">&quot;text&quot;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**结构伪类选择器**/</span></span><br><span class="line"><span class="comment">/**第一个子元素**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:first</span>-child&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**最后一个子元素**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:last-child</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**第n个子元素**/</span></span><br><span class="line"><span class="comment">/**n可以为1，2，3，4...也可以为公式，如2n,2n+1表示奇数偶数**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-child</span>(n)&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/**倒数第n个子元素**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:nth-last-child</span>(n)&#123;</span><br><span class="line">    <span class="attribute">background-color</span>:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**伪元素：必须设置content才有效，默认为行内元素**/</span></span><br><span class="line"><span class="comment">/**在父元素最前添加一个伪元素**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    background-color:red</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**在父元素最后添加一个伪元素**/</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    background-color:red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-other"><a href="#2-other" class="headerlink" title="2.other"></a>2.other</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**sans-serif：默认使用无衬线字体**/</span></span><br><span class="line"><span class="attribute">font-family</span>:黑体,宋体,sans-serif</span><br><span class="line"><span class="comment">/**文本缩进，1em：当前标签的font-size大小，font-size默认是16px**/</span></span><br><span class="line">text-indent:<span class="number">2em</span></span><br><span class="line"><span class="comment">/**文本修饰：下划线，删除线，上划线，无装饰线**/</span></span><br><span class="line">text-decoration:underline/line-through/overline/none</span><br><span class="line"><span class="comment">/**可以让文本垂直居中，line-height：1 可以取消上下间距**/</span></span><br><span class="line">line-height:<span class="number">1px</span></span><br><span class="line"><span class="comment">/**0.5表示透明度**/</span></span><br><span class="line">color:<span class="built_in">rgba</span>(<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,.<span class="number">5</span>)</span><br><span class="line"><span class="comment">/**让块状标签水平居中**/</span></span><br><span class="line">margin：<span class="number">0</span> auto</span><br><span class="line"><span class="comment">/**背景平铺属性:默认/不平铺/x轴平铺/y轴平铺**/</span></span><br><span class="line">background-repeat:repeat/no-repeat/repeat-x/repeat-y</span><br><span class="line"><span class="comment">/**背景位置**/</span></span><br><span class="line">background-position：<span class="number">1px</span> <span class="number">2px</span></span><br><span class="line"><span class="comment">/**修改元素层级，默认为0**/</span></span><br><span class="line">z-index:<span class="number">1</span></span><br><span class="line"><span class="comment">/**垂直对齐方式:默认，基线对齐/顶部/中部/底部**/</span></span><br><span class="line">vertical-align:baseline/top/middle/bottom</span><br><span class="line"><span class="comment">/**光标类型:默认(箭头)/小手/工字形/十字光标**/</span></span><br><span class="line">cursor:default/point/text/move</span><br><span class="line"><span class="comment">/**圆角边框，按照百分比来显示的话，最大50%**/</span></span><br><span class="line">border-radius:<span class="number">10px</span>/<span class="number">50%</span></span><br><span class="line"><span class="comment">/**溢出部分显示:默认/隐藏/显示滚动条/自动显示或者隐藏滚动条**/</span></span><br><span class="line">overflow:visible/hidden/scroll/auto</span><br><span class="line"><span class="comment">/**隐藏**/</span></span><br><span class="line">visibility:hidden<span class="comment">/**在网页中占位置**/</span></span><br><span class="line">display:none/block<span class="comment">/**在网页中不占位置**/</span></span><br><span class="line"><span class="comment">/**背景图片大小**/</span></span><br><span class="line"><span class="comment">/**contain:包含，等比例缩放，不会超过盒子的最大，盒子有可能有空白**/</span></span><br><span class="line"><span class="comment">/**cover：覆盖，刚好填满整个盒子没有空白，图片可能有部分不显示**/</span></span><br><span class="line">background-size：宽度 高度/contain/cover</span><br><span class="line"><span class="comment">/**文字阴影**/</span></span><br><span class="line"><span class="comment">/**h-shadow：必须，水平偏移量**/</span></span><br><span class="line"><span class="comment">/**v-shadow：必须，垂直偏移量**/</span></span><br><span class="line"><span class="comment">/**blur：可选，模糊度**/</span></span><br><span class="line"><span class="comment">/**color：可选，阴影颜色**/</span></span><br><span class="line"><span class="comment">/**阴影可以叠加设置，每组阴影取值之间以逗号隔开**/</span></span><br><span class="line">text-shadow:h-shadow v-shadow blur color</span><br><span class="line"><span class="comment">/**盒子阴影**/</span></span><br><span class="line"><span class="comment">/**h-shadow：必须，水平偏移量**/</span></span><br><span class="line"><span class="comment">/**v-shadow：必须，垂直偏移量**/</span></span><br><span class="line"><span class="comment">/**blur：可选，模糊度**/</span></span><br><span class="line"><span class="comment">/**spread：可选，阴影扩大**/</span></span><br><span class="line"><span class="comment">/**color：可选，阴影颜色**/</span></span><br><span class="line"><span class="comment">/**inset：可选，阴影改为内部阴影**/</span></span><br><span class="line">text-shadow:h-shadow v-shadow blur spread color inset</span><br><span class="line"><span class="comment">/**过渡**/</span></span><br><span class="line"><span class="comment">/**第一个参数为过渡的属性，all表示所有,也可以写具体属性，如：width,height等**/</span></span><br><span class="line"><span class="comment">/**第二个参数为过渡的时长**/</span></span><br><span class="line">transition：all <span class="number">1s</span></span><br></pre></td></tr></table></figure><h4 id="3-显示模式"><a href="#3-显示模式" class="headerlink" title="3.显示模式"></a>3.显示模式</h4><p>​块级元素:独占一行，宽度默认为父元素宽度，高度由内容撑开，可以设置宽高<br>​行内块元素:一行可以显示多个，可以设置宽高<br>​行内元素:一行可以显示多个，宽高由内容撑开，不可以设置宽高<br>​元素显示模式转换:display:block&#x2F;inline-block&#x2F;inline</p><h4 id="4-优先级"><a href="#4-优先级" class="headerlink" title="4.优先级"></a>4.优先级</h4><p>​继承 &lt; 通配符选择器 &lt; 标签选择器 &lt; 类选择器 &lt; id选择器 &lt; 行内样式 &lt; !important<br>​!important写在属性值的后面，分号的前面！<br>​!important不能提升继承的优先级，只要是继承优先级最低！<br>​实际开发中不建议使用 !important 。</p><h4 id="5-盒子模型"><a href="#5-盒子模型" class="headerlink" title="5.盒子模型"></a>5.盒子模型</h4><p>​盒子模型由四部分构成，外边距(margin), 边框(border),内边距(padding), 内容content<br>​box-sizing 就是指定盒子的大小和结构的。<br>​box-sizing: content-box; &#x2F;&#x2F;默认值 内容真正宽度 &#x3D; 设置的宽度<br>​box-sizing: border-box; &#x2F;&#x2F; 内容真正宽度width&#x3D; 设置的width- 左右padding - 左右border<br>​box-sizing: inherit;&#x2F;&#x2F; 规定从父元素继承此值<br>​如果想要盒子模型中的content宽度与通过css width属性设置的宽度相同，则使用box-sizing: content-box;<br>​如果想使整个盒子宽度固定(即使padding和border发生变化)时使用 box-sizing:border-box.</p><h5 id="1-合并现象"><a href="#1-合并现象" class="headerlink" title="(1.)合并现象"></a>(1.)合并现象</h5><p>​场景：垂直布局 的 块级元素，上下的margin会合并,最终两者距离为margin的最大值<br>​解决方法：只给其中一个盒子设置margin即可</p><h5 id="2-塌陷现象"><a href="#2-塌陷现象" class="headerlink" title="(2.)塌陷现象"></a>(2.)塌陷现象</h5><p>​互相嵌套 的 块级元素，子元素的 margin-top 会作用在父元素上,导致父元素一起往下移动<br>​解决方法：<br>​给父元素设置border-top 或者 padding-top（分隔父子元素的margin-top）<br>​给父元素设置overflow：hidden<br>​转换成行内块元素<br>​设置浮动</p><h4 id="6-浮动"><a href="#6-浮动" class="headerlink" title="6.浮动"></a>6.浮动</h4><h5 id="1-特点："><a href="#1-特点：" class="headerlink" title="(1.)特点："></a>(1.)特点：</h5><p>​浮动元素会脱标，在标准流中不占位置；</p><p>​浮动元素比标准流高出半个级别，可以覆盖标准流中的元素；</p><p>​浮动找浮动，下一个浮动元素会在上一个浮动元素后面左右浮动；</p><p>​浮动元素有特殊的显示效果：① 一行可以显示多个 ② 可以设置宽高；</p><h5 id="2-清除浮动带来的影响："><a href="#2-清除浮动带来的影响：" class="headerlink" title="(2.)清除浮动带来的影响："></a>(2.)清除浮动带来的影响：</h5><p>​1.设置父元素高度；</p><p>​2.额外标签(在父元素内容的最后台南佳一个块级元素，设置clear:both，但会让页面结构变得复杂)；</p><p>​3.伪元素清除（项目中使用，直接给标签加类即可清除浮动）</p><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">visibility</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::before</span>,<span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="attribute">display</span>:table;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.clearfix</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​4.给父元素设置overflow:hidden</p><h4 id="7-定位"><a href="#7-定位" class="headerlink" title="7.定位"></a>7.定位</h4><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**定位：静态，相对，绝对，固定**/</span></span><br><span class="line"><span class="comment">/**静态：静态定位就是之前标准流，不能通过方位属性进行移动**/</span></span><br><span class="line"><span class="comment">/**相对：1. 需要配合方位属性实现移动；2. 相对于自己原来位置进行移动；3. 在页面中占位置 → 没有脱标**/</span></span><br><span class="line"><span class="comment">/**绝对：1. 需要配合方位属性实现移动；2. 默认相对于浏览器可视区域进行移动；3. 在页面中不占位置 → 已经脱标**/</span></span><br><span class="line"><span class="comment">/**一般来说，子元素用绝对定位，父元素用相对定位，可以让子元素相对于父元素进行自由移动，且对网页布局影响最小**/</span></span><br><span class="line"><span class="comment">/**固定：1. 需要配合方位属性实现移动；2. 相对于浏览器可视区域进行移动；3. 在页面中不占位置 → 已经脱标，可以让盒子固定在屏幕中的某一个位置**/</span></span><br><span class="line"><span class="attribute">position</span>:static/relative/absolute/fixed</span><br></pre></td></tr></table></figure><h4 id="8-精灵图"><a href="#8-精灵图" class="headerlink" title="8.精灵图"></a>8.精灵图</h4><ol><li>创建一个盒子</li><li>设置盒子大小为小图片大小</li><li>设置精灵图为盒子的背景图片</li><li>将小图片左上角坐标 <strong>取负值</strong>，设置给盒子的background-position：x y</li></ol>]]></content>
      
      
      <categories>
          
          <category> html-css </category>
          
      </categories>
      
      
        <tags>
            
            <tag> html-css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows设置开机自启动&amp;创建定时任务</title>
      <link href="/2024/01/23/windows%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8-%E5%88%9B%E5%BB%BA%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/"/>
      <url>/2024/01/23/windows%E8%AE%BE%E7%BD%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8-%E5%88%9B%E5%BB%BA%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<p>场景：需要在windows启动的时候将minio服务器启动，同时需要每天定时备份minio的数据</p><p>自动备份脚本：</p><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 声明采用UTF-8编码</span></span><br><span class="line"><span class="built_in">chcp</span> <span class="number">65001</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">rem 设置 7-Zip 路径</span></span><br><span class="line"><span class="built_in">set</span> &quot;SevenZipPath=D:\<span class="number">7</span>-Zip\<span class="number">7</span>z.exe&quot;</span><br><span class="line"></span><br><span class="line">:: 设置源目录路径</span><br><span class="line"><span class="built_in">set</span> &quot;SourceDirectory=D:\minio\data&quot;</span><br><span class="line"></span><br><span class="line">:: 设置目标路径</span><br><span class="line"><span class="built_in">set</span> &quot;TargetDirectory=E:\minio_back_up&quot;</span><br><span class="line"></span><br><span class="line">:: 获取前天的日期对应的备份脚本，并删除</span><br><span class="line"><span class="keyword">for</span> /f <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;cscript //nologo the_day_before_yesterday.vbs&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> the_day_before_yesterday=<span class="variable">%%a</span></span><br><span class="line"><span class="comment">rem 开始删除minio_back_up_%the_day_before_yesterday%.7z</span></span><br><span class="line"><span class="built_in">del</span> /F &quot;E:\minio_back_up\minio_back_up_<span class="variable">%the_day_before_yesterday%</span>.<span class="number">7</span>z&quot;</span><br><span class="line"><span class="comment">rem 删除minio_back_up_%the_day_before_yesterday%.7z结束</span></span><br><span class="line"></span><br><span class="line">:: 根据当前日期获取，年月日串</span><br><span class="line"><span class="keyword">for</span> /f <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;cscript //nologo today.vbs&#x27;) <span class="keyword">do</span> <span class="built_in">set</span> today=<span class="variable">%%a</span></span><br><span class="line">::<span class="built_in">del</span> /F &quot;E:\minio_back_up\minio_back_up_<span class="variable">%today%</span>.<span class="number">7</span>z&quot;</span><br><span class="line">:: 执行压缩操作</span><br><span class="line"><span class="variable">%SevenZipPath%</span> a -r &quot;<span class="variable">%TargetDirectory%</span>\minio_back_up_<span class="variable">%today%</span>.<span class="number">7</span>z&quot; &quot;<span class="variable">%SourceDirectory%</span>&quot;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> Directory compression completed successfully!</span><br></pre></td></tr></table></figure><p>the_day_before_yesterday.vbs</p><figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line">d = <span class="built_in">date</span>() - <span class="number">2</span>  </span><br><span class="line"><span class="keyword">Dim</span> current_month</span><br><span class="line"><span class="keyword">Dim</span> current_day</span><br><span class="line">current_month = <span class="built_in">month</span>(d) </span><br><span class="line">current_day= <span class="built_in">day</span>(d)</span><br><span class="line"><span class="keyword">Dim</span> formattedMonth    </span><br><span class="line"><span class="keyword">If</span> current_month &lt; <span class="number">10</span> <span class="keyword">Then</span>    </span><br><span class="line">    formattedMonth = <span class="string">&quot;0&quot;</span> &amp; current_month    </span><br><span class="line"><span class="keyword">Else</span>    </span><br><span class="line">    formattedMonth = current_month    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> formattedDay    </span><br><span class="line"><span class="keyword">If</span> current_day &lt; <span class="number">10</span> <span class="keyword">Then</span>    </span><br><span class="line">    formattedDay = <span class="string">&quot;0&quot;</span> &amp; current_day    </span><br><span class="line"><span class="keyword">Else</span>    </span><br><span class="line">    formattedDay = current_day    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">  </span><br><span class="line">wscript.echo <span class="built_in">year</span>(d) &amp;<span class="string">&quot;-&quot;</span>&amp; formattedMonth &amp;<span class="string">&quot;-&quot;</span>&amp; formattedDay</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>today.vbs</p><figure class="highlight vbscript"><table><tr><td class="code"><pre><span class="line">d = <span class="built_in">date</span>()</span><br><span class="line"><span class="keyword">Dim</span> current_month</span><br><span class="line"><span class="keyword">Dim</span> current_day</span><br><span class="line">current_month = <span class="built_in">month</span>(d) </span><br><span class="line">current_day= <span class="built_in">day</span>(d)</span><br><span class="line"><span class="keyword">Dim</span> formattedMonth    </span><br><span class="line"><span class="keyword">If</span> current_month &lt; <span class="number">10</span> <span class="keyword">Then</span>    </span><br><span class="line">    formattedMonth = <span class="string">&quot;0&quot;</span> &amp; current_month    </span><br><span class="line"><span class="keyword">Else</span>    </span><br><span class="line">    formattedMonth = current_month    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">Dim</span> formattedDay    </span><br><span class="line"><span class="keyword">If</span> current_day &lt; <span class="number">10</span> <span class="keyword">Then</span>    </span><br><span class="line">    formattedDay = <span class="string">&quot;0&quot;</span> &amp; current_day    </span><br><span class="line"><span class="keyword">Else</span>    </span><br><span class="line">    formattedDay = current_day    </span><br><span class="line"><span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line">  </span><br><span class="line">wscript.echo <span class="built_in">year</span>(d) &amp;<span class="string">&quot;-&quot;</span>&amp; formattedMonth &amp;<span class="string">&quot;-&quot;</span>&amp; formattedDay</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>minio服务启动脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@echo off</span><br><span class="line">REM 声明采用UTF-8编码</span><br><span class="line">chcp 65001</span><br><span class="line">echo.</span><br><span class="line">echo [信息] 运行MinIO文服务器。</span><br><span class="line">echo.</span><br><span class="line">::设置窗口标题</span><br><span class="line">title Minio文件服务</span><br><span class="line"></span><br><span class="line">::设置用户名为myname</span><br><span class="line">setx MINIO_ROOT_USER root</span><br><span class="line">::设置密码为mypassword</span><br><span class="line">setx MINIO_ROOT_PASSWORD xxxxxx</span><br><span class="line"> </span><br><span class="line">cd %~dp0</span><br><span class="line">::切换到minio.exe文件所在目录</span><br><span class="line">cd D:\minio\bin</span><br><span class="line">::启动minio服务</span><br><span class="line">minio.exe server D:\minio\data --console-address &quot;:9001&quot; --address &quot;:9000&quot; &gt; D:\minio\logs\minio.log</span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>设置开机自启</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20240120135416286.png" alt="image-20240120135416286"></p><p>在其中右键-&gt;快捷方式，链接到对应的脚本即可，像我配置了这个</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20240120135604118.png" alt="image-20240120135604118"></p><p>windows定时任务：</p><p>此电脑右键-&gt;管理-&gt;任务计划程序-&gt;任务计划程序库-&gt;创建基本任务</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20240120135754465.png" alt="image-20240120135754465"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jenkins本地部署</title>
      <link href="/2023/12/14/Jenkins%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/"/>
      <url>/2023/12/14/Jenkins%E6%9C%AC%E5%9C%B0%E9%83%A8%E7%BD%B2/</url>
      
        <content type="html"><![CDATA[<p>1.安装：</p><p>jenkins不同版本支持的jdk不一样，如果不指定版本，默认下载的话，会是支持jdk11的版本，而当前我需要部署的项目jdk版本是1.8可能不兼容，</p><p>而Jenkins最后一个支持JDK 8的版本是<strong>2.345</strong>，此外，Jenkins LTS（长期支持）的2.289.3版本也支持JDK 8；</p><p>最后找的是2.289.3</p><p>对应的docker-compose.yml:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">version: &quot;3.1&quot;</span><br><span class="line">services:</span><br><span class="line">  jenkins:</span><br><span class="line">    image: jenkins/jenkins:2.289.3</span><br><span class="line">    volumes:</span><br><span class="line">      - /usr/dnms/jenkins/data/:/var/jenkins_home </span><br><span class="line">      - /etc/localtime:/etc/localtime #保持时间一致</span><br><span class="line">      - /var/run/docker.sock:/var/run/docker.sock</span><br><span class="line">      - /usr/bin/docker:/usr/bin/docker</span><br><span class="line">      - /usr/local/bin/docker-compose:/usr/local/bin/docker-compose</span><br><span class="line">      - /usr/bin/docker-compose:/usr/bin/docker-compose</span><br><span class="line">      - /usr/local/java/jdk1.8.0_202/:/usr/local/java</span><br><span class="line">      - /usr/local/java/jdk1.8.0_202/jre/:/usr/local/java/jre</span><br><span class="line">      - /usr/local/maven/apache-maven-3.6.1:/usr/local/maven</span><br><span class="line">      - /usr/local/maven/repo:/usr/local/maven/repo</span><br><span class="line">      - /usr/dnms/docker:/usr/dnms/docker #项目要运行的docker-compose所在目录</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;18080:8080&quot;</span><br><span class="line">      - &quot;18082:8082&quot;</span><br><span class="line">    expose:</span><br><span class="line">      - &quot;18080&quot;</span><br><span class="line">      - &quot;50000&quot;</span><br><span class="line">    privileged: true</span><br><span class="line">    user: root</span><br><span class="line">    restart: always</span><br><span class="line">    container_name: jenkins</span><br><span class="line">    environment:</span><br><span class="line">      JAVA_OPTS: &#x27;-Djava.util.logging.config.file=/var/jenkins_home/log.properties</span><br><span class="line">                  -Dhudson.model.DownloadService.noSignatureCheck=true&#x27;</span><br></pre></td></tr></table></figure><p>其中-Dhudson.model.DownloadService.noSignatureCheck&#x3D;true，是为了防止更改site时候报错：There were errors checking the update sites: Signature verification failed in update site的问题</p><p>2.Jenkins启动之后，需要更改site，目录为maven jenkins-&gt;manage plugins-&gt;advanced-&gt;Update Site</p><p>从<a href="http://updates.jenkins.io/update-center.json%E6%94%B9%E4%B8%BA%EF%BC%9Ahttps://mirror.tuna.tsinghua.edu.cn/jenkins/updates/dynamic-2.289/update-center.json">http://updates.jenkins.io/update-center.json改为：https://mirror.tuna.tsinghua.edu.cn/jenkins/updates/dynamic-2.289/update-center.json</a></p><p>然后找到jenkins安装文件中default.json所在目录，一般是jenkins&#x2F;data&#x2F;updates中</p><p>执行一下命令：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">把上面的json文件下载下来替换原有的json文件</span></span><br><span class="line">wget https://mirror.tuna.tsinghua.edu.cn/jenkins/updates/dynamic-2.289/update-center.json</span><br><span class="line"></span><br><span class="line">cp default.json default.json.bak</span><br><span class="line"></span><br><span class="line">mv update-center.json default.json</span><br></pre></td></tr></table></figure><p>重启jenkins：docker restart jenkins，之后插件就可以正常安装</p><p>3.下载git,maven,ssh插件，目录为：maven jenkins-&gt;manage plugins-&gt;available</p><p>下载之后配置maven，jdk以及ssh(如果是本地部署可以不下载配置)，我是挂载的外面的相关目录，所以jdk目录为&#x2F;usr&#x2F;local&#x2F;java，如果没有挂载的话也可以选自动下载，jdk目录一般为&#x2F;opt&#x2F;java&#x2F;openjdk&#x2F;bin&#x2F;java</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231214155227225.png" alt="image-20231214155227225"></p><p>4.部署项目</p><p>配置git地址，确定构建需要的分支，如果git太大的话可以选择：Additional Behaviours-&gt;advanced clone behaviours</p><p>git clone的时间可以设置长一点，默认10分钟，我设置了30分钟</p><p>也可以浅克隆，设置深度为1</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231214155622184.png" alt="image-20231214155622184"></p><p>设置maven命令的时候可以指定执行哪一个环境：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231214155720494.png" alt="image-20231214155720494"></p><p>之后就是执行脚本：</p><p>当前项目是根据ruoyi项目二次开发的，通过docker-compose启动</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line">current_dir=$(pwd)</span><br><span class="line">echo &#x27;当前目录:&#x27;+$&#123;current_dir&#125;</span><br><span class="line">echo &#x27;将编译后的jar迁移到/usr/dnms/docker 下&#x27;</span><br><span class="line">mv $&#123;current_dir&#125;/ruoyi-modules/dd-business/target/dd-business.jar /usr/dnms/docker/ruoyi/modules/business/jar/</span><br><span class="line">mv $&#123;current_dir&#125;/ruoyi-gateway/target/ruoyi-gateway.jar /usr/dnms/docker/ruoyi/gateway/jar/</span><br><span class="line">mv $&#123;current_dir&#125;/ruoyi-auth/target/ruoyi-auth.jar /usr/dnms/docker/ruoyi/auth/jar/</span><br><span class="line">mv $&#123;current_dir&#125;/ruoyi-modules/ruoyi-system/target/ruoyi-modules-system.jar /usr/dnms/docker/ruoyi/modules/system/jar</span><br><span class="line">cd /usr/dnms/docker </span><br><span class="line">echo &#x27;切换到docker-compose目录:&#x27;+$(pwd)</span><br><span class="line">echo &#x27;停止运行容器...&#x27;</span><br><span class="line">imgs=(&quot;ruoyi-gateway&quot; &quot;ruoyi-auth&quot; &quot;ruoyi-modules-system&quot; &quot;dd-business&quot;)  </span><br><span class="line">  </span><br><span class="line">for img in $&#123;imgs[@]&#125;  </span><br><span class="line">do  </span><br><span class="line">        id=$(docker ps -a | grep &quot;$&#123;img&#125;&quot;* | awk &#x27;&#123;print $1&#125;&#x27;)  </span><br><span class="line">        if [ -n &quot;$&#123;id&#125;&quot; ]; then  </span><br><span class="line">                docker stop $&#123;id&#125;  </span><br><span class="line">                docker rm   $&#123;id&#125; </span><br><span class="line">echo &quot;$&#123;img&#125;容器已经被删除&quot; </span><br><span class="line">        else  </span><br><span class="line">                echo &quot;$&#123;img&#125;容器不存在&quot;  </span><br><span class="line">        fi  </span><br><span class="line">done</span><br><span class="line">echo &#x27;删除镜像...&#x27;</span><br><span class="line">for img in $&#123;imgs[@]&#125;  </span><br><span class="line">do  </span><br><span class="line">        id=$(docker images -a | grep &quot;$&#123;img&#125;&quot;* | awk &#x27;&#123;print $3&#125;&#x27;)  </span><br><span class="line">        if [ -n &quot;$&#123;id&#125;&quot; ]; then  </span><br><span class="line">                docker rmi  $&#123;id&#125; </span><br><span class="line">echo &quot;$&#123;img&#125;镜像已经被删除&quot; </span><br><span class="line">        else  </span><br><span class="line">                echo &quot;$&#123;img&#125;镜像不存在&quot;  </span><br><span class="line">        fi  </span><br><span class="line">done</span><br><span class="line">echo &#x27;开始构建镜像...&#x27;</span><br><span class="line">for img in $&#123;imgs[@]&#125;  </span><br><span class="line">do  </span><br><span class="line">    docker-compose build $&#123;img&#125; --no-cache    </span><br><span class="line">done</span><br><span class="line">echo &#x27;开始启动容器...&#x27;</span><br><span class="line">for img in $&#123;imgs[@]&#125;  </span><br><span class="line">do  </span><br><span class="line">    docker-compose up $&#123;img&#125; -d</span><br><span class="line">done</span><br><span class="line">echo &#x27;脚本执行结束...&#x27;</span><br></pre></td></tr></table></figure><p>之后更新脚本就部署完了</p><p>如果是远程部署的话，可以下载publish over ssh插件</p><p>然后在全局管理中配置远程的ip，port，username，password等，在新建或者编辑任务的时候</p><p>Build Environment选择Execute shell script on remote host using ssh</p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue3.0 run dev 报错</title>
      <link href="/2023/12/05/vue3-0-run-dev-%E6%8A%A5%E9%94%99/"/>
      <url>/2023/12/05/vue3-0-run-dev-%E6%8A%A5%E9%94%99/</url>
      
        <content type="html"><![CDATA[<p>1、</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231205132723716.png" alt="image-20231205132723716"></p><p>这个是我第一次执行npm run dev的时候报的错，后来在网上找到解决方法就可以了：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">node node_modules/esbuild/install.js</span><br></pre></td></tr></table></figure><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231205132919351.png" alt="image-20231205132919351"></p><p>具体链接：<a href="https://blog.csdn.net/weixin_45747310/article/details/119387340">https://blog.csdn.net/weixin_45747310/article/details/119387340</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>typora设置picgo</title>
      <link href="/2023/11/27/typora%E8%AE%BE%E7%BD%AEpicgo/"/>
      <url>/2023/11/27/typora%E8%AE%BE%E7%BD%AEpicgo/</url>
      
        <content type="html"><![CDATA[<p>下载picgo</p><p>百度网盘链接：<a href="https://pan.baidu.com/s/1DjUpOdq6O5a0b1XO-RuQhA?pwd=6ojd">点击这儿</a></p><p>设置阿里云oss的相关配置：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127142153962.png" alt="image-20231127142153962"></p><p>打开aliyun，申请AccessKey</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127142322587.png" alt="image-20231127142322587"></p><p>创建oss，bucket</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127142433415.png" alt="image-20231127142433415"></p><p>申请资源包</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127142531535.png" alt="image-20231127142531535"></p><p>点击确认之后可以在picgo中上传测试：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127142819890.png" alt="image-20231127142819890"></p><p>确认可以上传之后，在typora中配置：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127142900368.png" alt="image-20231127142900368"></p>]]></content>
      
      
      <categories>
          
          <category> other </category>
          
      </categories>
      
      
        <tags>
            
            <tag> other </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker部署服务</title>
      <link href="/2023/11/27/docker%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1/"/>
      <url>/2023/11/27/docker%E9%83%A8%E7%BD%B2%E6%9C%8D%E5%8A%A1/</url>
      
        <content type="html"><![CDATA[<h4 id="1-部署服务"><a href="#1-部署服务" class="headerlink" title="1.部署服务"></a>1.部署服务</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第1步，去DockerHub查看nginx镜像仓库及相关信息</span></span><br><span class="line">https://hub.docker.com</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第2步，拉取Nginx镜像</span></span><br><span class="line">docker pull nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第3步，查看镜像</span></span><br><span class="line">docker images</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">结果如下：</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED         SIZE</span><br><span class="line">nginx        latest    605c77e624dd   16 months ago   141MB</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第4步，创建并允许Nginx容器</span></span><br><span class="line">docker run -d --name nginx -p 80:80 nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第5步，查看运行中容器</span></span><br><span class="line">docker ps</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">也可以加格式化方式访问，格式会更加清爽</span></span><br><span class="line">docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第6步，访问网页，地址：http://虚拟机地址</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第7步，停止容器</span></span><br><span class="line">docker stop nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第8步，查看所有容器</span></span><br><span class="line">docker ps -a --format &quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第9步，再次启动nginx容器</span></span><br><span class="line">docker start nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第10步，再次查看容器</span></span><br><span class="line">docker ps --format &quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Image&#125;&#125;\t&#123;&#123;.Ports&#125;&#125;\t&#123;&#123;.Status&#125;&#125;\t&#123;&#123;.Names&#125;&#125;&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第11步，查看容器详细信息</span></span><br><span class="line">docker inspect nginx</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第12步，进入容器,查看容器内目录</span></span><br><span class="line">docker exec -it nginx bash</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">第13步，删除容器</span></span><br><span class="line">docker rm nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">发现无法删除，因为容器运行中，强制删除容器</span></span><br><span class="line">docker rm -f nginx</span><br></pre></td></tr></table></figure><h4 id="2-挂载数据卷"><a href="#2-挂载数据卷" class="headerlink" title="2.挂载数据卷"></a>2.挂载数据卷</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载本地目录</span></span><br><span class="line">-v 本地目录:容器内目录</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">挂载本地文件</span></span><br><span class="line">-v 本地文件:容器内文件</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.首先创建容器并指定数据卷，注意通过 -v 参数来指定数据卷</span></span><br><span class="line">docker run -d --name nginx -p 80:80 -v html:/usr/share/nginx/html nginx</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">建议用本地的目录来挂载：</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name nginx \</span><br><span class="line">  -p 18080:18080 \</span><br><span class="line">  -p 18081:18081 \</span><br><span class="line">  -v /root/nginx/html:/usr/share/nginx/html \</span><br><span class="line">  -v /root/nginx/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">  --network xw \</span><br><span class="line">  nginx</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.然后查看数据卷</span></span><br><span class="line">docker volume ls</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">结果</span></span><br><span class="line">DRIVER    VOLUME NAME</span><br><span class="line">local     29524ff09715d3688eae3f99803a2796558dbd00ca584a25a4bbc193ca82459f</span><br><span class="line">local     html</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.查看数据卷详情</span></span><br><span class="line">docker volume inspect html</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">结果</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        &quot;CreatedAt&quot;: &quot;2024-05-17T19:57:08+08:00&quot;,</span><br><span class="line">        &quot;Driver&quot;: &quot;local&quot;,</span><br><span class="line">        &quot;Labels&quot;: null,</span><br><span class="line">        &quot;Mountpoint&quot;: &quot;/var/lib/docker/volumes/html/_data&quot;,</span><br><span class="line">        &quot;Name&quot;: &quot;html&quot;,</span><br><span class="line">        &quot;Options&quot;: null,</span><br><span class="line">        &quot;Scope&quot;: &quot;local&quot;</span><br><span class="line">    &#125;</span><br><span class="line">]</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.查看/var/lib/docker/volumes/html/_data目录</span></span><br><span class="line">ll /var/lib/docker/volumes/html/_data</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">可以看到与nginx的html目录内容一样，结果如下：</span></span><br><span class="line">总用量 8</span><br><span class="line">-rw-r--r--. 1 root root 497 12月 28 2021 50x.html</span><br><span class="line">-rw-r--r--. 1 root root 615 12月 28 2021 index.html</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">5.进入该目录，并随意修改index.html内容</span></span><br><span class="line">cd /var/lib/docker/volumes/html/_data</span><br><span class="line">vi index.html</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">6.打开页面，查看效果</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">7.进入容器内部，查看/usr/share/nginx/html目录内的文件是否变化</span></span><br><span class="line">docker exec -it nginx bash</span><br></pre></td></tr></table></figure><h4 id="3-部署mysql"><a href="#3-部署mysql" class="headerlink" title="3.部署mysql"></a>3.部署mysql</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">创建并运行新mysql容器，挂载本地目录</span></span><br><span class="line">docker run -d \</span><br><span class="line">  --name mysql \</span><br><span class="line">  -p 3306:3306 \</span><br><span class="line">  -e TZ=Asia/Shanghai \</span><br><span class="line">  -e MYSQL_ROOT_PASSWORD=123 \</span><br><span class="line">  -v ./mysql/data:/var/lib/mysql \</span><br><span class="line">  -v ./mysql/conf:/etc/mysql/conf.d \</span><br><span class="line">  -v ./mysql/init:/docker-entrypoint-initdb.d \</span><br><span class="line">  --network xw \</span><br><span class="line">  mysql</span><br></pre></td></tr></table></figure><h4 id="4-部署nginx"><a href="#4-部署nginx" class="headerlink" title="4.部署nginx"></a>4.部署nginx</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d \</span><br><span class="line">  --name nginx \</span><br><span class="line">  -p 18080:18080 \</span><br><span class="line">  -p 18081:18081 \</span><br><span class="line">  -v /root/nginx/html:/usr/share/nginx/html \</span><br><span class="line">  -v /root/nginx/nginx.conf:/etc/nginx/nginx.conf \</span><br><span class="line">  --network hmall \</span><br><span class="line">  nginx</span><br></pre></td></tr></table></figure><h4 id="5-部署jar"><a href="#5-部署jar" class="headerlink" title="5.部署jar"></a>5.部署jar</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name office --network xw -p 8080:8080 office</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker基础</title>
      <link href="/2023/11/27/docker%E5%9F%BA%E7%A1%80/"/>
      <url>/2023/11/27/docker%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h4 id="1-Docker官方文档"><a href="#1-Docker官方文档" class="headerlink" title="1.Docker官方文档"></a>1.Docker官方文档</h4><p><a href="https://docs.docker.com/">点击这儿</a></p><h4 id="2-常见命令"><a href="#2-常见命令" class="headerlink" title="2.常见命令"></a>2.常见命令</h4><p><a href="https://docs.docker.com/engine/reference/commandline/cli/">点击这儿</a></p><p>其中，比较常见的命令有</p><table><thead><tr><th align="left"><strong>命令</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>文档地址</strong></th></tr></thead><tbody><tr><td align="left">docker pull</td><td align="left">拉取镜像</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/pull/">docker pull</a></td></tr><tr><td align="left">docker push</td><td align="left">推送镜像到DockerRegistry</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/push/">docker push</a></td></tr><tr><td align="left">docker images</td><td align="left">查看本地镜像</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/images/">docker images</a></td></tr><tr><td align="left">docker rmi</td><td align="left">删除本地镜像</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/rmi/">docker rmi</a></td></tr><tr><td align="left">docker run</td><td align="left">创建并运行容器（不能重复创建）</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/run/">docker run</a></td></tr><tr><td align="left">docker stop</td><td align="left">停止指定容器</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/stop/">docker stop</a></td></tr><tr><td align="left">docker start</td><td align="left">启动指定容器</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/start/">docker start</a></td></tr><tr><td align="left">docker restart</td><td align="left">重新启动容器</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/restart/">docker restart</a></td></tr><tr><td align="left">docker rm</td><td align="left">删除指定容器</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/rm/">docs.docker.com</a></td></tr><tr><td align="left">docker ps</td><td align="left">查看容器</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/ps/">docker ps</a></td></tr><tr><td align="left">docker logs</td><td align="left">查看容器运行日志</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/logs/">docker logs</a></td></tr><tr><td align="left">docker exec</td><td align="left">进入容器</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/exec/">docker exec</a></td></tr><tr><td align="left">docker save</td><td align="left">保存镜像到本地压缩文件</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/save/">docker save</a></td></tr><tr><td align="left">docker load</td><td align="left">加载本地压缩文件到镜像</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/load/">docker load</a></td></tr><tr><td align="left">docker inspect</td><td align="left">查看容器详细信息</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/inspect/">docker inspect</a></td></tr><tr><td align="left">docker update –restart&#x3D;always [容器名&#x2F;容器id]</td><td align="left">Docker容器开机自启</td><td align="left"></td></tr></tbody></table><p>用一副图来表示这些命令的关系：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/whiteboard_exported_image.png" alt="whiteboard_exported_image"></p><h4 id="3-数据卷"><a href="#3-数据卷" class="headerlink" title="3.数据卷"></a>3.数据卷</h4><p>相关命令：</p><table><thead><tr><th align="left"><strong>命令</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>文档地址</strong></th></tr></thead><tbody><tr><td align="left">docker volume create</td><td align="left">创建数据卷</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/volume_create/">docker volume create</a></td></tr><tr><td align="left">docker volume ls</td><td align="left">查看所有数据卷</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/volume_ls/">docs.docker.com</a></td></tr><tr><td align="left">docker volume rm</td><td align="left">删除指定数据卷</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/volume_prune/">docs.docker.com</a></td></tr><tr><td align="left">docker volume inspect</td><td align="left">查看某个数据卷的详情</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/volume_inspect/">docs.docker.com</a></td></tr><tr><td align="left">docker volume prune</td><td align="left">清除数据卷</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/volume_prune/">docker volume prune</a></td></tr></tbody></table><h4 id="4-网络"><a href="#4-网络" class="headerlink" title="4.网络"></a>4.网络</h4><p><a href="https://docs.docker.com/engine/reference/commandline/network/">官方文档</a></p><p>常见命令</p><table><thead><tr><th align="left"><strong>命令</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>文档地址</strong></th></tr></thead><tbody><tr><td align="left">docker network create</td><td align="left">创建一个网络</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_create/">docker network create</a></td></tr><tr><td align="left">docker network ls</td><td align="left">查看所有网络</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_ls/">docs.docker.com</a></td></tr><tr><td align="left">docker network rm</td><td align="left">删除指定网络</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_rm/">docs.docker.com</a></td></tr><tr><td align="left">docker network prune</td><td align="left">清除未使用的网络</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_prune/">docs.docker.com</a></td></tr><tr><td align="left">docker network connect</td><td align="left">使指定容器连接加入某网络</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_connect/">docs.docker.com</a></td></tr><tr><td align="left">docker network disconnect</td><td align="left">使指定容器连接离开某网络</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_disconnect/">docker network disconnect</a></td></tr><tr><td align="left">docker network inspect</td><td align="left">查看网络详细信息</td><td align="left"><a href="https://docs.docker.com/engine/reference/commandline/network_inspect/">docker network inspect</a></td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">1.首先通过命令创建一个网络</span></span><br><span class="line">docker network create xw</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">2.然后查看网络</span></span><br><span class="line">docker network ls</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">结果：</span></span><br><span class="line">NETWORK ID     NAME      DRIVER    SCOPE</span><br><span class="line">639bc44d0a87   bridge    bridge    local</span><br><span class="line">403f16ec62a2   xw     bridge    local</span><br><span class="line">0dc0f72a0fbb   host      host      local</span><br><span class="line">cd8d3e8df47b   none      null      local</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">其中，除了xwl以外，其它都是默认的网络</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.让<span class="built_in">dd</span>和mysql都加入该网络，注意，在加入网络时可以通过--<span class="built_in">alias</span>给容器起别名</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">这样该网络内的其它容器可以用别名互相访问！</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.1.mysql容器</span></span><br><span class="line">docker network connect xw mysql --alias mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">3.2.office容器，也就是java项目</span></span><br><span class="line">docker network connect xw office</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.进入<span class="built_in">dd</span>容器，尝试利用别名访问db</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.1.进入容器</span></span><br><span class="line">docker exec -it office bash</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">4.2.用db别名访问</span></span><br><span class="line">ping mysql</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">结果</span></span><br><span class="line">PING db (172.18.0.2) 56(84) bytes of data.</span><br><span class="line">64 bytes from mysql.xw (172.18.0.2): icmp_seq=1 ttl=64 time=0.070 ms</span><br><span class="line">64 bytes from mysql.xw (172.18.0.2): icmp_seq=2 ttl=64 time=0.056 ms</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-dockerfile"><a href="#5-dockerfile" class="headerlink" title="5.dockerfile"></a>5.dockerfile</h4><p><a href="https://docs.docker.com/engine/reference/builder/">官方文档</a></p><p>常用命令：</p><table><thead><tr><th align="left"><strong>指令</strong></th><th align="left"><strong>说明</strong></th><th align="left"><strong>示例</strong></th></tr></thead><tbody><tr><td align="left"><strong>FROM</strong></td><td align="left">指定基础镜像</td><td align="left"><code>FROM centos:6</code></td></tr><tr><td align="left"><strong>ENV</strong></td><td align="left">设置环境变量，可在后面指令使用</td><td align="left"><code>ENV key value</code></td></tr><tr><td align="left"><strong>COPY</strong></td><td align="left">拷贝本地文件到镜像的指定目录</td><td align="left"><code>COPY ./xx.jar /tmp/app.jar</code></td></tr><tr><td align="left"><strong>RUN</strong></td><td align="left">执行Linux的shell命令，一般是安装过程的命令</td><td align="left"><code>RUN yum install gcc</code></td></tr><tr><td align="left"><strong>EXPOSE</strong></td><td align="left">指定容器运行时监听的端口，是给镜像使用者看的</td><td align="left">EXPOSE 8080</td></tr><tr><td align="left"><strong>ENTRYPOINT</strong></td><td align="left">镜像中应用的启动命令，容器运行时调用</td><td align="left">ENTRYPOINT java -jar xx.jar</td></tr></tbody></table><p>如果要自己制作一个镜像:</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">基础镜像</span></span><br><span class="line">FROM openjdk:8</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设定时区</span></span><br><span class="line">ENV TZ=Asia/Shanghai</span><br><span class="line">RUN ln -snf /usr/share/zoneinfo/$TZ /etc/localtime &amp;&amp; echo $TZ &gt; /etc/timezone</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">拷贝jar包</span></span><br><span class="line">COPY office.jar /office.jar</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">入口</span></span><br><span class="line">ENTRYPOINT [&quot;java&quot;, &quot;-jar&quot;, &quot;/office.jar&quot;]</span><br></pre></td></tr></table></figure><p>之后将office.jar与dockerfile文件上传到对应目标后执行：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker build -t office .</span><br></pre></td></tr></table></figure><ul><li><code>docker build </code>: 就是构建一个docker镜像</li><li><code>-t office</code> ：<code>-t</code>参数是指定镜像的名称（<code>repository</code>和<code>tag</code>）</li><li><code>.</code> : 最后的点是指构建时Dockerfile所在路径，由于进入的是同级目录，所以指定的是<code>.</code>代表当前目录，也可以直接指定Dockerfile目录：</li></ul><p>运行程序：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">docker run -d --name office -p 8085:8085 office:1.0</span><br></pre></td></tr></table></figure><h4 id="6-dockercompose"><a href="#6-dockercompose" class="headerlink" title="6.dockercompose"></a>6.dockercompose</h4><p><a href="https://docs.docker.com/compose/compose-file/compose-file-v3/">官方文档</a></p><table><thead><tr><th align="left"><strong>docker run 参数</strong></th><th align="left"><strong>docker compose 指令</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left">–name</td><td align="left">container_name</td><td align="left">容器名称</td></tr><tr><td align="left">-p</td><td align="left">ports</td><td align="left">端口映射</td></tr><tr><td align="left">-e</td><td align="left">environment</td><td align="left">环境变量</td></tr><tr><td align="left">-v</td><td align="left">volumes</td><td align="left">数据卷配置</td></tr><tr><td align="left">–network</td><td align="left">networks</td><td align="left">网络</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">version: &quot;3.3&quot;</span><br><span class="line"></span><br><span class="line">services:</span><br><span class="line">  mysql:</span><br><span class="line">    image: mysql</span><br><span class="line">    container_name: mysql</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;3306:3306&quot;</span><br><span class="line">    environment:</span><br><span class="line">      TZ: Asia/Shanghai</span><br><span class="line">      MYSQL_ROOT_PASSWORD: 123456</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;./mysql/conf:/etc/mysql/conf.d&quot;</span><br><span class="line">      - &quot;./mysql/data:/var/lib/mysql&quot;</span><br><span class="line">      - &quot;./mysql/init:/docker-entrypoint-initdb.d&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - new</span><br><span class="line">  office:</span><br><span class="line">    build:</span><br><span class="line">      context: .</span><br><span class="line">      dockerfile: Dockerfile</span><br><span class="line">    container_name: office</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;8085:8085&quot;</span><br><span class="line">    networks:</span><br><span class="line">      - new</span><br><span class="line">    depends_on:</span><br><span class="line">      - mysql</span><br><span class="line">  nginx:</span><br><span class="line">    image: nginx</span><br><span class="line">    container_name: nginx</span><br><span class="line">    ports:</span><br><span class="line">      - &quot;9966:9966&quot;</span><br><span class="line">    volumes:</span><br><span class="line">      - &quot;./nginx/nginx.conf:/etc/nginx/nginx.conf&quot;</span><br><span class="line">      - &quot;./nginx/html:/usr/share/nginx/html&quot;</span><br><span class="line">    depends_on:</span><br><span class="line">      - office</span><br><span class="line">    networks:</span><br><span class="line">      - new</span><br><span class="line">networks:</span><br><span class="line">  new:</span><br><span class="line">    external: false</span><br><span class="line">    name: xw</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>编写好的docker-compose.yml文件，就可以部署项目了。常见的命令如下：</p><p><a href="https://docs.docker.com/compose/reference/">官方文档</a></p><p>语法如下：docker compose [OPTIONS] [COMMAND]</p><p>OPTIONS:</p><table><thead><tr><th align="left"><strong>参数或指令</strong></th><th align="left"><strong>说明</strong></th></tr></thead><tbody><tr><td align="left">-f</td><td align="left">指定compose文件的路径和名称</td></tr><tr><td align="left">-p</td><td align="left">指定project名称。project就是当前compose文件中设置的多个service的集合，是逻辑概念</td></tr></tbody></table><p>COMMAND:</p><table><thead><tr><th><strong>参数或指令</strong></th><th><strong>说明</strong></th></tr></thead><tbody><tr><td>up</td><td>创建并启动所有service容器</td></tr><tr><td>down</td><td>停止并移除所有容器、网络</td></tr><tr><td>ps</td><td>列出所有启动的容器</td></tr><tr><td>logs</td><td>查看指定容器的日志</td></tr><tr><td>stop</td><td>停止容器</td></tr><tr><td>start</td><td>启动容器</td></tr><tr><td>restart</td><td>重启容器</td></tr><tr><td>top</td><td>查看运行的进程</td></tr><tr><td>exec</td><td>在指定的运行中容器中执行命令</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 1.进入root目录</span><br><span class="line">cd /root</span><br><span class="line"></span><br><span class="line"># 2.删除旧容器</span><br><span class="line">docker rm -f $(docker ps -qa)</span><br><span class="line"></span><br><span class="line"># 3.删除office镜像</span><br><span class="line">docker rmi office</span><br><span class="line"></span><br><span class="line"># 4.清空MySQL数据</span><br><span class="line">rm -rf mysql/data</span><br><span class="line"></span><br><span class="line"># 5.启动所有, -d 参数是后台启动</span><br><span class="line">[root@localhost ~]# docker compose up -d</span><br><span class="line">[+] Running 13/13</span><br><span class="line"> ✔ mysql 12 layers [⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿⣿]      0B/0B      Pulled    68.9s </span><br><span class="line">   ✔ 72a69066d2fe Pull complete              9.0s </span><br><span class="line">   ✔ 93619dbc5b36 Pull complete              4.4s </span><br><span class="line">   ✔ 99da31dd6142 Pull complete              5.2s </span><br><span class="line">   ✔ 626033c43d70 Pull complete              9.1s </span><br><span class="line">   ✔ 37d5d7efb64e Pull complete              8.8s </span><br><span class="line">   ✔ ac563158d721 Pull complete              14.7s </span><br><span class="line">   ✔ d2ba16033dad Pull complete              13.2s </span><br><span class="line">   ✔ 688ba7d5c01a Pull complete              13.2s </span><br><span class="line">   ✔ 00e060b6d11d Pull complete              35.0s </span><br><span class="line">   ✔ 1c04857f594f Pull complete              17.6s </span><br><span class="line">   ✔ 4d7cfa90e6ea Pull complete              17.6s </span><br><span class="line">   ✔ e0431212d27d Pull complete              22.1s </span><br><span class="line">[+] Building 0.0s (8/8) FINISHED             docker:default</span><br><span class="line"> =&gt; [office internal] load build definition from Dockerfile   0.0s</span><br><span class="line"> =&gt; =&gt; transferring dockerfile: 346B          0.0s</span><br><span class="line"> =&gt; [office internal] load .dockerignore      0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 2B               0.0s</span><br><span class="line"> =&gt; [office internal] load metadata for docker.io/library/openjdk:8     0.0s</span><br><span class="line"> =&gt; [office 1/3] FROM docker.io/library/openjdk:8                       0.0s</span><br><span class="line"> =&gt; [office internal] load build context                          0.0s</span><br><span class="line"> =&gt; =&gt; transferring context: 94B                                  0.0s</span><br><span class="line"> =&gt; CACHED [office 2/3] RUN ln -snf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime &amp;&amp; echo Asia/Shanghai &gt; /etc/timezone              0.0s</span><br><span class="line"> =&gt; CACHED [office 3/3] COPY office.jar /office.jar               0.0s</span><br><span class="line"> =&gt; [office] exporting to image                                   0.0s</span><br><span class="line"> =&gt; =&gt; exporting layers                                           0.0s</span><br><span class="line"> =&gt; =&gt; writing image sha256:0957507902392a4b14842774f869934d987850f67d25b2e051574f8e8f93f579                                                                                                  0.0s</span><br><span class="line"> =&gt; =&gt; naming to docker.io/library/root-office                            0.0s</span><br><span class="line">[+] Running 2/2</span><br><span class="line"> ✔ Container mysql   Started                                      0.1s </span><br><span class="line"> ✔ Container office  Started </span><br><span class="line"></span><br><span class="line"># 6.查看镜像</span><br><span class="line">docker compose images</span><br><span class="line"></span><br><span class="line"># 7.查看容器</span><br><span class="line">docker compose ps</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装linux</title>
      <link href="/2023/11/27/%E5%AE%89%E8%A3%85linux/"/>
      <url>/2023/11/27/%E5%AE%89%E8%A3%85linux/</url>
      
        <content type="html"><![CDATA[<h4 id="1-1-安装VMware"><a href="#1-1-安装VMware" class="headerlink" title="1.1.安装VMware"></a>1.1.安装VMware</h4><p>VMware是业界最好用的虚拟机软件之一。<br>windows版本的网站如下：<a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">windows地址</a><br>Mac下也有对应版本，叫做VMware Fusion：<a href="https://www.vmware.com/cn/products/fusion.html">mac地址</a><br>百度网盘：<a href="https://pan.baidu.com/s/1rmuF-f0j2LbSkYIiRRqbzA?pwd=wmnn">vmware16+centos 7</a></p><p>注：如果自己电脑上已经有了低版本的VMware，则需要先卸载，再重新安装</p><h5 id="1-1-1-卸载旧版VMware"><a href="#1-1-1-卸载旧版VMware" class="headerlink" title="1.1.1 卸载旧版VMware"></a>1.1.1 卸载旧版VMware</h5><p>首先，在控制面板找到程序和功能选项，找到VMware，卸载；卸载完成后，还需要看看VMware的安装目录是否有旧数据，一并清理掉；最后需要删除注册表中 <strong><code>HKEY_CURRENT_USER</code></strong>&#x2F;<strong><code>Software</code></strong>&#x2F;VMware.Inc</p><h4 id="1-2-新建虚拟机"><a href="#1-2-新建虚拟机" class="headerlink" title="1.2 新建虚拟机"></a>1.2 新建虚拟机</h4><p>其他步骤略；</p><p>注：在第一次启动linux的时候，建议手动配置网络，否则每次重启网络都不一样；</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/1-1700896649751-1.png" alt="1"></p><p>在网络页面做下面的几件事情：</p><ol><li><p>修改主机名为自己喜欢的主机名，不要出现中文和特殊字符，建议用localhost</p></li><li><p>点击应用</p></li><li><p>将网络连接打开</p></li><li><p>点击配置，设置详细网络信息</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/9b7659b2-953a-4e49-af2f-ba004f48eb53.png" alt="9b7659b2-953a-4e49-af2f-ba004f48eb53"></p></li></ol><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/48ab5b4b-6d1a-4b02-9323-b0c1fccff2b5.png" alt="48ab5b4b-6d1a-4b02-9323-b0c1fccff2b5"></p><p>点击配置按钮后，需要把网卡地址改为静态IP，这样可以避免每次启动虚拟机IP都变化.</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/b6e07a41-821d-450d-b7e4-3d5b84b79b63.png" alt="b6e07a41-821d-450d-b7e4-3d5b84b79b63"></p><p>最后，点击完成按钮。</p><p>在虚拟机设置完毕之后，建议做一个快照：</p><p>地址在：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127130843146.png" alt="image-20231127130843146"></p>]]></content>
      
      
      <categories>
          
          <category> linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>docker-init</title>
      <link href="/2023/11/27/docker-init/"/>
      <url>/2023/11/27/docker-init/</url>
      
        <content type="html"><![CDATA[<h4 id="1-卸载旧版"><a href="#1-卸载旧版" class="headerlink" title="1.卸载旧版"></a>1.卸载旧版</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">yum remove docker \</span><br><span class="line">    docker-client \</span><br><span class="line">    docker-client-latest \</span><br><span class="line">    docker-common \</span><br><span class="line">    docker-latest \</span><br><span class="line">    docker-latest-logrotate \</span><br><span class="line">    docker-logrotate \</span><br><span class="line">    docker-engine</span><br></pre></td></tr></table></figure><h4 id="2-安装docker"><a href="#2-安装docker" class="headerlink" title="2.安装docker"></a>2.安装docker</h4><h5 id="2-1-配置Docker的yum库"><a href="#2-1-配置Docker的yum库" class="headerlink" title="2.1.配置Docker的yum库"></a>2.1.配置Docker的yum库</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装yum工具</span></span><br><span class="line">yum install -y yum-utils</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装成功后，执行命令，配置Docker的yum源：</span></span><br><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装docker</span></span><br><span class="line">yum install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin</span><br></pre></td></tr></table></figure><h5 id="2-2-启动和校验"><a href="#2-2-启动和校验" class="headerlink" title="2.2.启动和校验"></a>2.2.启动和校验</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">启动Docker</span></span><br><span class="line">systemctl start docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">停止Docker</span></span><br><span class="line">systemctl stop docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重启</span></span><br><span class="line">systemctl restart docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置开机自启</span></span><br><span class="line">systemctl enable docker</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">执行docker ps命令，如果不报错，说明安装启动成功</span></span><br><span class="line">docker ps</span><br></pre></td></tr></table></figure><h5 id="2-3-配置镜像加速（以阿里云为例）"><a href="#2-3-配置镜像加速（以阿里云为例）" class="headerlink" title="2.3.配置镜像加速（以阿里云为例）"></a>2.3.配置镜像加速（以阿里云为例）</h5><p>在产品中搜索容器镜像服务：</p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127131452763.png" alt="image-20231127131452763"></p><p><img src="https://xwlearnnote.oss-cn-shanghai.aliyuncs.com/img/image-20231127131614937.png" alt="image-20231127131614937"></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">sudo tee /etc/docker/daemon.json &lt;&lt;-&#x27;EOF&#x27;</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://xxx.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
